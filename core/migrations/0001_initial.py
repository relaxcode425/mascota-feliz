# Generated by Django 5.2.3 on 2025-07-10 16:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FichaMedica',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('operador', 'Operador de agenda'), ('cliente', 'Cliente'), ('recepcion', 'Recepción'), ('veterinario', 'Veterinario'), ('estilista', 'Estilista'), ('ventas', 'Vendedor'), ('administrador', 'Administrador'), ('ventas', 'Ventas')], default='cliente', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dueno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rut', models.CharField(max_length=12, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('contacto', models.CharField(max_length=20)),
                ('direccion', models.CharField(max_length=255)),
                ('usuario', models.OneToOneField(limit_choices_to={'tipo_usuario': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Entrada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('peso', models.FloatField(blank=True, null=True)),
                ('descripcion', models.TextField()),
                ('tratamiento', models.TextField(blank=True, help_text='Detalle del procedimiento realizado')),
                ('ficha_medica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entradas', to='core.fichamedica')),
            ],
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('chip', models.CharField(blank=True, max_length=30, null=True)),
                ('raza', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=50)),
                ('sexo', models.CharField(choices=[('macho', 'Macho'), ('hembra', 'Hembra')], default='macho', max_length=10)),
                ('especie', models.CharField(choices=[('perro', 'Perro'), ('gato', 'Gato')], default='perro', max_length=20)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('dueno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mascotas', to='core.dueno')),
            ],
        ),
        migrations.AddField(
            model_name='fichamedica',
            name='mascota',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.mascota'),
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('medicamentos', models.TextField(help_text='Indicar nombre comercial, dosis, vía y frecuencia.')),
                ('indicaciones_generales', models.TextField(blank=True, help_text='Instrucciones adicionales para el dueño.')),
                ('entrada', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='receta', to='core.entrada')),
                ('firmado_por', models.ForeignKey(limit_choices_to={'tipo_usuario': 'veterinario'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recetas_emitidas', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_servicio', models.CharField(choices=[('veterinario', 'Veterinario'), ('estetico', 'Estético')], max_length=20)),
                ('tipo_reserva', models.CharField(choices=[('presencial', 'Presencial'), ('domicilio', 'A domicilio')], max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=255, null=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('en_camino', 'En camino'), ('en_espera', 'En espera'), ('en_atencion', 'En atención'), ('finalizada', 'Finalizada'), ('cancelada', 'Cancelada'), ('no_asistio', 'No asistió')], default='pendiente', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('cliente', models.ForeignKey(limit_choices_to={'tipo_usuario': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServicioDomicilio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_estilistas', models.PositiveSmallIntegerField(default=0)),
                ('num_veterinarios', models.PositiveSmallIntegerField(default=0)),
                ('descripcion', models.TextField(blank=True)),
                ('horario_asignado', models.TimeField(blank=True, null=True)),
                ('estado', models.CharField(default='pendiente', max_length=50)),
                ('reserva', models.OneToOneField(limit_choices_to={'tipo_reserva': 'domicilio'}, on_delete=django.db.models.deletion.CASCADE, to='core.reserva')),
            ],
        ),
    ]
